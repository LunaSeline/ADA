PSUDO CODE:
MST-PRIM(G, w, r)
for each u V [G] do key[u] ← ∞
π[u] ← NIL
key[r] ← 0
Q ← V [G]
while Q ≠ Ø
do u ← EXTRACT-MIN(Q)
for each v Adj[u]
do if v Q and w(u, v) < key[v]
then π[v] ← u
key[v] ← w(u, v)

CODE:
#include<stdio.h>
#include<conio.h>
int a,b,u,v,n,i,j,ne=1;
int visited[10]={0},min,mincost=0,cost[10][10];
void main()
{
printf("NAME: HRUDYA\nENROLLMENT NO.:A2305221030\n\n");
printf("Enter the number of nodes: ");
scanf("%d",&n);
printf("Enter the adjacency matrix:\n");
for(i=1;i<=n;i++){
for(j=1;j<=n;j++)
{ scanf("%d",&cost[i][j]);
if(cost[i][j]==0){
cost[i][j]=999;
} } }

30

printf("\nMST: ");
visited[1]=1;
printf("\n");
while(ne < n)
{ for(i=1,min=999;i<=n;i++){
for(j=1;j<=n;j++){
if(cost[i][j]< min){
if(visited[i]!=0)
{min=cost[i][j];
a=u=i;
b=v=j;
} } } }
if(visited[u]==0 || visited[v]==0)
{printf("Edge %d:(%d %d) cost:%d\n",ne++,a,b,min);
mincost+=min;
visited[b]=1;}
cost[a][b]=cost[b][a]=999;}
printf("\nMinimun cost= %d",mincost);
getch();}
